yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
}
par(mfrow=c(3,1))
for(i in 3:5){
b = barplot(
names.arg = round(p(order_of_ls), 2),
df_ls[order_of_ls, i] / sqrt(n),
ylim = c(min(df_ls/sqrt(n)), max(df_ls/sqrt(n))+1.1),
yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
}
par(mfrow=c(1,1))
i <- 5
b = barplot(
names.arg = round(p(order_of_ls), 2),
df_ls[order_of_ls, i] / sqrt(n),
ylim = c(min(df_ls/sqrt(n)), max(df_ls/sqrt(n))+1.1),
yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
png(paste("Mean_ls_c", round(c_t*100, 0) ,"_d", distribution, ".png", sep=""), height=400, width=800)
par(mfrow=c(1,1))
i <- 5
b = barplot(
names.arg = round(p(order_of_ls), 2),
df_ls[order_of_ls, i] / sqrt(n),
ylim = c(min(df_ls/sqrt(n)), max(df_ls/sqrt(n))+1.1),
yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
#las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
par(mfrow=c(1,1))
i <- 5
b = barplot(
names.arg = round(p(order_of_ls), 2),
df_ls[order_of_ls, i] / sqrt(n),
ylim = c(0, max(df_ls/sqrt(n))+1.1),
yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
par(mfrow=c(3,1))
for(i in 3:5){
b = barplot(
names.arg = round(p(order_of_ls), 2),
df_ls[order_of_ls, i] / sqrt(n),
ylim = c(min(df_ls/sqrt(n)), max(df_ls/sqrt(n))+1.1),
yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
}
dev.off()
dev.off()
par(mfrow=c(3,1))
for(i in 3:5){
b = barplot(
names.arg = round(p(order_of_ls), 2),
df_ls[order_of_ls, i] / sqrt(n),
ylim = c(min(df_ls/sqrt(n)), max(df_ls/sqrt(n))+1.1),
yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
}
dev.off()
par(mfrow=c(3,1))
for(i in 3:5){
b = barplot(
names.arg = round(p(order_of_ls), 2),
df_ls[order_of_ls, i] / sqrt(n),
ylim = c(0, max(df_ls/sqrt(n))+1.1),
yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
}
par(mfrow=c(1,1))
i <- 5
b = barplot(
names.arg = round(p(order_of_ls), 2),
df_ls[order_of_ls, i] / sqrt(n),
ylim = c(0, max(df_ls/sqrt(n))+1.1),
yaxt = 'n',
main = bquote(paste("Barplot of mean values of ", gamma[j], " for rule" ~ .(rule_names[i]))),
xlab = bquote(paste("The end point of interval in wich we are checking assymetry i.e., [0, ", phi, "(j)], in increasing order", sep="")),
ylab = "Mean",
las=2,
offset=abs(min_or_zero(df_ls[order_of_ls, i]/sqrt(n)))
)
text(b, zero_neg_values_and_adapt(df_ls[order_of_ls, i]/sqrt(n)), labels=paste(as.character(round(df_ls[order_of_ls ,i]/sqrt(n), 2))), srt=60)
source("src/Q_test.R")
Ss_Q <- c()
As_Q <- c()
Ms_Q <- c()
T.Ms_Q <- c()
T.As_Q <- c()
Ss_rule <- c()
As_rule <- c()
Ms_rule <- c()
T.Ms_rule <- c()
T.As_rule <- c()
for(i in 1:20){
cat("Computing... ", i, "\n")
X <- rnorm(50)
S <- Q_test(X, 5, "S")
A <- Q_test(X, 5, "A")
M <- Q_test(X, 5, "M")
T.M <- Q_test(X, 5, "T.M")
T.A <- Q_test(X, 5, "T.A")
Ss_Q[i] <- S$Q.test
As_Q[i] <- A$Q.test
Ms_Q[i] <- M$Q.test
T.Ms_Q[i] <- T.M$Q.test
T.As_Q[i] <- T.A$Q.test
Ss_rule[i] <- S$k
As_rule[i] <- A$k
Ms_rule[i] <- M$k
T.Ms_rule[i] <- T.M$k
T.As_rule[i] <- T.A$k
}
As_Q
T.As_Q
Ss_Q
T.Ms_Q
Ms_Q
As_rule
T.As_rule
Ss_rule
T.Ms_rule
Ms_rule
source("src/basic_functions.R")
source("src/choice_rules.R")
Ss <- c()
As <- c()
Ms <- c()
T.Ms <- c()
T.As <- c()
for(i in 1:20){
X <- rnorm(50)
Ss[i] <- rule_S(X, 5)
As[i] <- rule_A(X, 5)
Ms[i] <- rule_M(X, 5)
T.Ms[i] <- rule_T.M(X, 5)
T.As[i] <- rule_T.A(X, 5)
}
mean(As == 1) * 100
T.As
Ss
T.Ms
Ms
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-p, p),
main="Function l_8",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
par(mfrow=c(4, 2))
k <- 1/2
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-p, p),
main="Function l_1",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
points(0.5, 0, pch=16)
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
mmax <- 1/sqrt(2*1/8)
par(mfrow=c(4, 2))
mmax <- 1/sqrt(2*1/8)
k <- 1/2
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_1",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
points(0.5, 0, pch=16)
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 1/4
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_2",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 1/8
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_3",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 3/8
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_4",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 1/16
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_5",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 3/16
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_6",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 5/16
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_7",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 7/16
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_8",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
par(mfrow=c(4, 2))
mmax <- 1/sqrt(2*1/16)
k <- 1/2
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_1",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
points(0.5, 0, pch=16)
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 1/4
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_2",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 1/8
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_3",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 3/8
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_4",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 1/16
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_5",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 3/16
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_6",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 5/16
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_7",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
k <- 7/16
p <- 1/sqrt(2*k)
l1 <- rep(-p, times=50)
r1 <- rep(p, times=50)
plot(
seq(from=0, to=k, along.with=l1),
l1,
type='l',
xlim=c(0, 1),
ylim=c(-mmax, mmax),
main="Function l_8",
xlab="u",
ylab="l_j(u)",
xaxt = "n"
)
axis(1, at = c(0, 1/8, 1/4, 3/8, 2/4, 5/8, 3/4, 7/8, 4/4))
lines(c(k, 1-k), c(0, 0))
lines(seq(from=1-k, to=1, along.with=r1), r1, type='l')
