source("src/Q_test.R")
source("src/Q_test.R")
setwd("~/Repos/mgr/")
source("src/Q_test.R")
library(tidyverse)
options(bitmapType='cairo')
set.seed(42)
n <- 50
N <- 100
r <- 5
c_t <- 2.2
quants <- c(0.948, 0.949, 0.95, 0.951, 0.952)
cat("Sanity check of hyperparameters: \n")
cat(paste("n:\t", n, "\n"))
cat(paste("N:\t", N, "\n"))
cat(paste("r:\t", r, "\n"))
cat(paste("c:\t", c_t, "\n"))
cat("\n")
# by columns we have test with rules respectively
# A, T.A, S, T.M, M
Q_matrix <- matrix(nrow=N, ncol=5)
K_matrix <- matrix(nrow=N, ncol=5)
for(i in 1:N){
cat(paste("Computing...\t Step", i, "\n"))
X <- rnorm(n, 0, 1)
Q_result_A <- Q_test(X, r, rule = "A")
Q_result_T.A <- Q_test(X, r, rule = "T.A", c_t)
Q_result_S <- Q_test(X, r, rule = "S")
Q_result_T.M <- Q_test(X, r, rule = "T.M", c_t)
Q_result_M <- Q_test(X, r, rule = "M")
Q_matrix[i,] <- c(
Q_result_A$Q.test,
Q_result_T.A$Q.test,
Q_result_S$Q.test,
Q_result_T.M$Q.test,
Q_result_M$Q.test
)
K_matrix[i,] <- c(
Q_result_A$k,
Q_result_T.A$k,
Q_result_S$k,
Q_result_T.M$k,
Q_result_M$k
)
}
# matrix with given quantiles for all rules
# rules in rows, quantiles in columns
final_matrix <- matrix(nrow=5, ncol=length(quants))
for(i in 1:5){
final_matrix[i,] <- quantile(Q_matrix[,i], probs=quants, names=F)
}
df_output <- data.frame(final_matrix, row.names=c("A", "T.A", "S", "T.M", "M"))
colnames(df_output) <- quants
rule_names <- c("A", "T.A", "S", "T.M", "M")
par(mfrow=c(5,1))
for(i in 1:5){
hist(
K_matrix[,i],
main=paste("Value of rule", rule_names[i]),
breaks=1:(2^r),
xlim=c(1,2^r)-0.5,
freq=FALSE,
xaxt='n'
)
axis(side=1, at=1:(2^r)-0.5, labels=1:(2^r))
}
par(mfrow=c(5,1))
for(i in 1:5){
hist(
K_matrix[,i],
main=paste("Value of rule", rule_names[i]),
breaks=1:(2^r),
xlim=c(1,2^r)-0.5,
freq=FALSE,
xaxt='n'
)
axis(side=1, at=1:(2^r)-0.5, labels=1:(2^r))
}
par(mfrow=c(5,1))
for(i in 1:5){
hist(
K_matrix[,i],
main=paste("Value of rule", rule_names[i]),
breaks=2^(0:r),
xlim=c(1,2^r)-0.5,
freq=FALSE,
xaxt='n'
)
axis(side=1, at=1:(2^r)-0.5, labels=1:(2^r))
}
par(mfrow=c(5,1))
for(i in 1:5){
hist(
K_matrix[,i],
main=paste("Value of rule", rule_names[i]),
breaks=1:(2^r),
xlim=c(0,2^r)-0.5,
freq=FALSE,
xaxt='n'
)
axis(side=1, at=2^(0:r)-0.5, labels=2^(0:r)-0.5)
}
par(mfrow=c(5,1))
for(i in 1:5){
hist(
K_matrix[,i],
main=paste("Value of rule", rule_names[i]),
breaks=1:(2^r),
xlim=c(0,2^r)-0.5,
freq=FALSE,
xaxt='n'
)
axis(side=1, at=2^(0:r), labels=2^(0:r))
}
par(mfrow=c(5,1))
for(i in 1:5){
hist(
K_matrix[,i],
main=paste("Value of rule", rule_names[i]),
breaks=1:(2^r),
xlim=c(0,2^r)-0.5,
freq=FALSE,
xaxt='n'
)
axis(side=1, at=2^(0:r)-0.5, labels=2^(0:r))
}
K_matrix[,i]
K_matrix[,1]
par(mfrow=c(5,1))
for(i in 1:5){
hist(
K_matrix[,i],
main=paste("Value of rule", rule_names[i]),
breaks=0:(2^r),
xlim=c(0,2^r)-0.5,
freq=FALSE,
xaxt='n'
)
axis(side=1, at=2^(0:r)-0.5, labels=2^(0:r))
}
data.frame("1" = mean(K_matrix[,1] == 1),
"2" = mean(K_matrix[,1] == 2),
"4" = mean(K_matrix[,1] == 4),
"8" = mean(K_matrix[,1] == 8),
"16" = mean(K_matrix[,1] == 16),
"32" = mean(K_matrix[,1] == 32))
data.frame("A = 1" = mean(K_matrix[,1] == 1),
"A = 2" = mean(K_matrix[,1] == 2),
"A = 4" = mean(K_matrix[,1] == 4),
"A = 8" = mean(K_matrix[,1] == 8),
"A = 16" = mean(K_matrix[,1] == 16),
"A = 32" = mean(K_matrix[,1] == 32))
data.frame("A=1" = mean(K_matrix[,1] == 1),
"A=2" = mean(K_matrix[,1] == 2),
"A=4" = mean(K_matrix[,1] == 4),
"A=8" = mean(K_matrix[,1] == 8),
"A=16" = mean(K_matrix[,1] == 16),
"A=32" = mean(K_matrix[,1] == 32))
data.frame("1" = mean(K_matrix[,1] == 1),
"2" = mean(K_matrix[,1] == 2),
"4" = mean(K_matrix[,1] == 4),
"8" = mean(K_matrix[,1] == 8),
"16" = mean(K_matrix[,1] == 16),
"32" = mean(K_matrix[,1] == 32))
data.frame("X1" = mean(K_matrix[,1] == 1),
"X2" = mean(K_matrix[,1] == 2),
"X4" = mean(K_matrix[,1] == 4),
"X8" = mean(K_matrix[,1] == 8),
"X16" = mean(K_matrix[,1] == 16),
"X32" = mean(K_matrix[,1] == 32))
barplot(
data.frame("X1" = mean(K_matrix[,1] == 1),
"X2" = mean(K_matrix[,1] == 2),
"X4" = mean(K_matrix[,1] == 4),
"X8" = mean(K_matrix[,1] == 8),
"X16" = mean(K_matrix[,1] == 16),
"X32" = mean(K_matrix[,1] == 32)),
)
barplot(
c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32)),
)
barplot(
c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32)),
names.arg = c("1", "2", "4", "8", "16", "32")
)
barplot(
c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32)),
names.arg = c("1", "2", "4", "8", "16", "32")
)
barplot(
c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32)),
names.arg = c("1", "2", "4", "8", "16", "32")
)
barplot(
c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32)),
names.arg = c("1", "2", "4", "8", "16", "32")
)
barplot(
c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32)),
names.arg = c("1", "2", "4", "8", "16", "32")
)
par(mfrow=c(5,1))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1)
)
text(b, freqs+0.1, labels=as.character(freqs*100))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1)
)
text(b, freqs+0.1, labels=paste(as.character(freqs*100), "%"))
par(mfrow=c(5,1))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1.1)
)
text(b, freqs+0.15, labels=paste(as.character(freqs*100), "%"))
par(mfrow=c(5,1))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1.1)
)
text(b, freqs+0.15, labels=paste(as.character(freqs*100), "%"))
par(mfrow=c(5,1))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1.3)
)
text(b, freqs+0.15, labels=paste(as.character(freqs*100), "%"))
par(mfrow=c(5,1))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1.3),
yaxt='n'
)
text(b, freqs+0.15, labels=paste(as.character(freqs*100), "%"))
par(mfrow=c(5,1))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1.3),
yaxt='n'
)
text(b, freqs+0.15, labels=paste(as.character(freqs*100), "%"))
par(mfrow=c(5,1))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1.3),
yaxt='n',
main=paste("Histogram of values of rule", rule_names[i]),
xlab = rule_names[i]
)
text(b, freqs+0.15, labels=paste(as.character(freqs*100), "%"))
freqs = c(mean(K_matrix[,1] == 1),
mean(K_matrix[,1] == 2),
mean(K_matrix[,1] == 4),
mean(K_matrix[,1] == 8),
mean(K_matrix[,1] == 16),
mean(K_matrix[,1] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1.3),
yaxt='n',
main=paste("Histogram of values of rule", rule_names[i]),
xlab = rule_names[i],
ylab = "Density"
)
text(b, freqs+0.15, labels=paste(as.character(freqs*100), "%"))
par(mfrow=c(5,1))
for(i in 1:5){
freqs = c(mean(K_matrix[,i] == 1),
mean(K_matrix[,i] == 2),
mean(K_matrix[,i] == 4),
mean(K_matrix[,i] == 8),
mean(K_matrix[,i] == 16),
mean(K_matrix[,i] == 32))
b = barplot(
freqs,
names.arg = c("1", "2", "4", "8", "16", "32"),
ylim = c(0,1.3),
yaxt='n',
main=paste("Histogram of values of rule", rule_names[i]),
xlab = rule_names[i],
ylab = "Density"
)
text(b, freqs+0.15, labels=paste(as.character(freqs*100), "%"))
}
